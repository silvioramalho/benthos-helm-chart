apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "benthos.fullname" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "benthos.labels" . | nindent 4 }}
data:
  benthos.yaml: |
    http:
      enabled: {{ .Values.http.enabled }}
      {{- if .Values.http.enabled }}
      address: {{ .Values.http.address | default "0.0.0.0:4195" }}
      root_path: {{ .Values.http.rootPath | default "/benthos" }}
      debug_endpoints: {{ .Values.http.debugEndpoints | default false }}
      {{- end -}}
      {{ if and .Values.http.tls.enabled .Values.http.tls.secretName }}
      cert_file: "/tls/tls.crt"
      key_file: "/tls/tls.key"
      {{- end -}}
      {{ if and .Values.http.enabled .Values.http.cors.enabled }}
      cors:
        enabled: {{ .Values.http.cors.enabled }}
        {{- if and .Values.http.cors.enabled .Values.http.cors.allowedOrigins }}
        allowed_origins: {{- range .Values.http.cors.allowedOrigins }}
          - {{ . }}
          {{- end }}
        {{- end }}
      {{- end -}}
    {{- if and .Values.localConfigFile.enabled (ne .Values.streams.enabled true) }}
    {{- if .Values.localConfigFile.configFilePath }}
    {{- (.Files.Get .Values.localConfigFile.configFilePath) | nindent 4 }}
    {{- else }}
    {{- fail "localConfigFile.configFilePath must be provided when localConfigFile.enabled is true" }}
    {{- end }}
    {{- else if and .Values.config (ne .Values.streams.enabled true) }}
    {{- tpl .Values.config . | nindent 4 }}
    {{- else if and .Values.streams.enabled .Values.streams.streamsConfigMap }}
    {{- else }}
    input:
      label: "no_config_in"
      generate:
        mapping: root = "This Benthos instance is unconfigured!"
        interval: 1m
    output:
      label: "no_config_out"
      stdout:
        codec: lines
    {{- end -}}
